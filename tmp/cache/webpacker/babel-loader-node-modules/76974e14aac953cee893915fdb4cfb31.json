{"ast":null,"code":"(function (root, factory) {\n  if (typeof define === 'function' && define.amd) {\n    // AMD. Register as an anonymous module.\n    define(factory);\n  } else if (typeof exports === 'object') {\n    // Node. Does not work with strict CommonJS, but\n    // only CommonJS-like enviroments that support module.exports,\n    // like Node.\n    module.exports = factory();\n  } else {\n    // Browser globals (root is window)\n    root.Sparkline = factory();\n  }\n})(window, function () {\n  function extend(specific, general) {\n    var obj = {};\n\n    for (var key in general) {\n      obj[key] = key in specific ? specific[key] : general[key];\n    }\n\n    return obj;\n  }\n\n  function Sparkline(element, options) {\n    this.element = element;\n    this.options = extend(options || {}, Sparkline.options);\n\n    init: {\n      this.element.innerHTML = \"<canvas></canvas>\";\n      this.canvas = this.element.firstChild;\n      this.context = this.canvas.getContext(\"2d\");\n      this.ratio = window.devicePixelRatio || 1;\n\n      if (this.options.tooltip) {\n        this.canvas.style.position = \"relative\";\n        this.canvas.onmousemove = showTooltip.bind(this);\n      }\n    }\n  }\n\n  Sparkline.options = {\n    width: 100,\n    height: null,\n    lineColor: \"black\",\n    lineWidth: 1.5,\n    startColor: \"transparent\",\n    endColor: \"black\",\n    maxColor: \"transparent\",\n    minColor: \"transparent\",\n    minValue: null,\n    maxValue: null,\n    minMaxValue: null,\n    maxMinValue: null,\n    dotRadius: 2.5,\n    tooltip: null,\n    fillBelow: true,\n    fillLighten: 0.5,\n    startLine: false,\n    endLine: false,\n    minLine: false,\n    maxLine: false,\n    bottomLine: false,\n    topLine: false,\n    averageLine: false\n  };\n\n  Sparkline.init = function (element, options) {\n    return new Sparkline(element, options);\n  };\n\n  Sparkline.draw = function (element, points, options) {\n    var sparkline = new Sparkline(element, options);\n    sparkline.draw(points);\n    return sparkline;\n  };\n\n  function getY(minValue, maxValue, offsetY, height, index) {\n    var range = maxValue - minValue;\n\n    if (range == 0) {\n      return offsetY + height / 2;\n    } else {\n      return offsetY + height - (this[index] - minValue) / range * height;\n    }\n  }\n\n  function drawDot(radius, x1, x2, color, line, x, y) {\n    this.context.beginPath();\n    this.context.fillStyle = color;\n    this.context.arc(x, y, radius, 0, Math.PI * 2, false);\n    this.context.fill();\n    drawLine.call(this, x1, x2, line, x, y);\n  }\n\n  function drawLine(x1, x2, style, x, y) {\n    if (!style) return;\n    this.context.save();\n    this.context.strokeStyle = style.color || 'black';\n    this.context.lineWidth = (style.width || 1) * this.ratio;\n    this.context.globalAlpha = style.alpha || 1;\n    this.context.beginPath();\n    this.context.moveTo(style.direction != 'right' ? x1 : x, y);\n    this.context.lineTo(style.direction != 'left' ? x2 : x, y);\n    this.context.stroke();\n    this.context.restore();\n  }\n\n  function showTooltip(e) {\n    var x = e.offsetX || e.layerX || 0;\n    var delta = (this.options.width - this.options.dotRadius * 2) / (this.points.length - 1);\n    var index = minmax(0, Math.round((x - this.options.dotRadius) / delta), this.points.length - 1);\n    this.canvas.title = this.options.tooltip(this.points[index], index, this.points);\n  }\n\n  Sparkline.prototype.draw = function (points) {\n    points = points || [];\n    this.points = points;\n    this.canvas.width = this.options.width * this.ratio;\n    this.canvas.style.width = this.options.width + 'px';\n    var pxHeight = this.options.height || this.element.offsetHeight;\n    this.canvas.height = pxHeight * this.ratio;\n    this.canvas.style.height = pxHeight + 'px';\n    var lineWidth = this.options.lineWidth * this.ratio;\n    var offsetX = Math.max(this.options.dotRadius * this.ratio, lineWidth / 2);\n    var offsetY = Math.max(this.options.dotRadius * this.ratio, lineWidth / 2);\n    var width = this.canvas.width - offsetX * 2;\n    var height = this.canvas.height - offsetY * 2;\n    var minValue = Math.min.apply(Math, points);\n    var maxValue = Math.max.apply(Math, points);\n    var bottomValue = this.options.minValue != undefined ? this.options.minValue : Math.min(minValue, this.options.maxMinValue != undefined ? this.options.maxMinValue : minValue);\n    var topValue = this.options.maxValue != undefined ? this.options.maxValue : Math.max(maxValue, this.options.minMaxValue != undefined ? this.options.minMaxValue : maxValue);\n    var minX = offsetX;\n    var maxX = offsetX;\n    var x = offsetX;\n    var y = getY.bind(points, bottomValue, topValue, offsetY, height);\n    var delta = width / (points.length - 1);\n    var dot = drawDot.bind(this, this.options.dotRadius * this.ratio, offsetX, width + offsetX);\n    var line = drawLine.bind(this, offsetX, width + offsetX);\n    this.context.save();\n    this.context.strokeStyle = this.options.lineColor;\n    this.context.fillStyle = this.options.lineColor;\n    this.context.lineWidth = lineWidth;\n    this.context.lineCap = 'round';\n    this.context.lineJoin = 'round';\n\n    if (this.options.fillBelow && points.length > 1) {\n      this.context.save();\n      this.context.beginPath();\n      this.context.moveTo(x, y(0));\n\n      for (var i = 1; i < points.length; i++) {\n        x += delta;\n        minX = points[i] == minValue ? x : minX;\n        maxX = points[i] == maxValue ? x : maxX;\n        this.context.lineTo(x, y(i));\n      }\n\n      this.context.lineTo(width + offsetX, height + offsetY + lineWidth / 2);\n      this.context.lineTo(offsetX, height + offsetY + lineWidth / 2);\n      this.context.fill();\n\n      if (this.options.fillLighten > 0) {\n        this.context.fillStyle = 'white';\n        this.context.globalAlpha = this.options.fillLighten;\n        this.context.fill();\n        this.context.globalAlpha = 1;\n      } else if (this.options.fillLighten < 0) {\n        this.context.fillStyle = 'black';\n        this.context.globalAlpha = -this.options.fillLighten;\n        this.context.fill();\n      }\n\n      this.context.restore();\n    }\n\n    x = offsetX;\n    this.context.beginPath();\n    this.context.moveTo(x, y(0));\n\n    for (var i = 1; i < points.length; i++) {\n      x += delta;\n      this.context.lineTo(x, y(i));\n    }\n\n    this.context.stroke();\n    this.context.restore();\n    line(this.options.bottomLine, 0, offsetY);\n    line(this.options.topLine, 0, height + offsetY + lineWidth / 2);\n    dot(this.options.startColor, this.options.startLine, offsetX + (points.length == 1 ? width / 2 : 0), y(0));\n    dot(this.options.endColor, this.options.endLine, offsetX + (points.length == 1 ? width / 2 : width), y(points.length - 1));\n    dot(this.options.minColor, this.options.minLine, minX + (points.length == 1 ? width / 2 : 0), y(points.indexOf(minValue)));\n    dot(this.options.maxColor, this.options.maxLine, maxX + (points.length == 1 ? width / 2 : 0), y(points.indexOf(maxValue))); //line(this.options.averageLine, )\n  };\n\n  function minmax(a, b, c) {\n    return Math.max(a, Math.min(b, c));\n  }\n\n  return Sparkline;\n});","map":{"version":3,"sources":["C:/Sites/course1/app/javascript/custom/sparkline.js"],"names":["root","factory","define","amd","exports","module","Sparkline","window","extend","specific","general","obj","key","element","options","init","innerHTML","canvas","firstChild","context","getContext","ratio","devicePixelRatio","tooltip","style","position","onmousemove","showTooltip","bind","width","height","lineColor","lineWidth","startColor","endColor","maxColor","minColor","minValue","maxValue","minMaxValue","maxMinValue","dotRadius","fillBelow","fillLighten","startLine","endLine","minLine","maxLine","bottomLine","topLine","averageLine","draw","points","sparkline","getY","offsetY","index","range","drawDot","radius","x1","x2","color","line","x","y","beginPath","fillStyle","arc","Math","PI","fill","drawLine","call","save","strokeStyle","globalAlpha","alpha","moveTo","direction","lineTo","stroke","restore","e","offsetX","layerX","delta","length","minmax","round","title","prototype","pxHeight","offsetHeight","max","min","apply","bottomValue","undefined","topValue","minX","maxX","dot","lineCap","lineJoin","i","indexOf","a","b","c"],"mappings":"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","sourcesContent":["(function (root, factory) {\r\n  if (typeof define === 'function' && define.amd) {\r\n    // AMD. Register as an anonymous module.\r\n    define(factory);\r\n  } else if (typeof exports === 'object') {\r\n    // Node. Does not work with strict CommonJS, but\r\n    // only CommonJS-like enviroments that support module.exports,\r\n    // like Node.\r\n    module.exports = factory();\r\n  } else {\r\n    // Browser globals (root is window)\r\n    root.Sparkline = factory();\r\n  }\r\n}(window, function () {\r\n  function extend(specific, general) {\r\n    var obj = {};\r\n    for (var key in general) {\r\n      obj[key] = key in specific ? specific[key] : general[key];\r\n    }\r\n    return obj;\r\n  }\r\n\r\n  function Sparkline(element, options) {\r\n    this.element = element;\r\n    this.options = extend(options || {}, Sparkline.options);\r\n\r\n    init: {\r\n      this.element.innerHTML = \"<canvas></canvas>\";\r\n      this.canvas = this.element.firstChild;\r\n      this.context = this.canvas.getContext(\"2d\");\r\n      this.ratio = window.devicePixelRatio || 1;\r\n\r\n      if (this.options.tooltip) {\r\n        this.canvas.style.position = \"relative\";\r\n        this.canvas.onmousemove = showTooltip.bind(this);\r\n      }\r\n    }\r\n  }\r\n\r\n  Sparkline.options = {\r\n    width: 100,\r\n    height: null,\r\n    lineColor: \"black\",\r\n    lineWidth: 1.5,\r\n    startColor: \"transparent\",\r\n    endColor: \"black\",\r\n    maxColor: \"transparent\",\r\n    minColor: \"transparent\",\r\n    minValue: null,\r\n    maxValue: null,\r\n    minMaxValue: null,\r\n    maxMinValue: null,\r\n    dotRadius: 2.5,\r\n    tooltip: null,\r\n    fillBelow: true,\r\n    fillLighten: 0.5,\r\n    startLine: false,\r\n    endLine: false,\r\n    minLine: false,\r\n    maxLine: false,\r\n    bottomLine: false,\r\n    topLine: false,\r\n    averageLine: false\r\n  };\r\n\r\n  Sparkline.init = function (element, options) {\r\n    return new Sparkline(element, options);\r\n  };\r\n\r\n  Sparkline.draw = function (element, points, options) {\r\n    var sparkline = new Sparkline(element, options);\r\n    sparkline.draw(points);\r\n    return sparkline;\r\n  }\r\n\r\n  function getY(minValue, maxValue, offsetY, height, index) {\r\n    var range = maxValue - minValue;\r\n    if (range == 0) {\r\n      return offsetY + height / 2;\r\n    } else {\r\n      return (offsetY + height) - ((this[index] - minValue) / range) * height;\r\n    }\r\n  }\r\n\r\n  function drawDot(radius, x1, x2, color, line, x, y) {\r\n    this.context.beginPath();\r\n    this.context.fillStyle = color;\r\n    this.context.arc(x, y, radius, 0, Math.PI * 2, false);\r\n    this.context.fill();\r\n    drawLine.call(this, x1, x2, line, x, y);\r\n  }\r\n\r\n  function drawLine(x1, x2, style, x, y){\r\n    if(!style) return;\r\n\r\n    this.context.save();\r\n    this.context.strokeStyle = style.color || 'black';\r\n    this.context.lineWidth = (style.width || 1) * this.ratio;\r\n    this.context.globalAlpha = style.alpha || 1;\r\n    this.context.beginPath();\r\n    this.context.moveTo(style.direction != 'right' ? x1 : x, y);\r\n    this.context.lineTo(style.direction != 'left' ? x2 : x, y);\r\n    this.context.stroke();\r\n    this.context.restore();\r\n  }\r\n\r\n  function showTooltip(e) {\r\n    var x = e.offsetX || e.layerX || 0;\r\n    var delta = ((this.options.width - this.options.dotRadius * 2) / (this.points.length - 1));\r\n    var index = minmax(0, Math.round((x - this.options.dotRadius) / delta), this.points.length - 1);\r\n\r\n    this.canvas.title = this.options.tooltip(this.points[index], index, this.points);\r\n  }\r\n\r\n  Sparkline.prototype.draw = function (points) {\r\n\r\n    points = points || [];\r\n    this.points = points;\r\n\r\n    this.canvas.width = this.options.width * this.ratio;\r\n    this.canvas.style.width = this.options.width + 'px';\r\n\r\n    var pxHeight = this.options.height || this.element.offsetHeight;\r\n    this.canvas.height = pxHeight * this.ratio;\r\n    this.canvas.style.height = pxHeight + 'px';\r\n\r\n    var lineWidth = this.options.lineWidth * this.ratio;\r\n    var offsetX = Math.max(this.options.dotRadius * this.ratio, lineWidth/2);\r\n    var offsetY = Math.max(this.options.dotRadius * this.ratio, lineWidth/2);\r\n    var width = this.canvas.width - offsetX * 2;\r\n    var height = this.canvas.height - offsetY * 2;\r\n\r\n    var minValue = Math.min.apply(Math, points);\r\n    var maxValue = Math.max.apply(Math, points);\r\n    var bottomValue = this.options.minValue != undefined ? this.options.minValue : Math.min(minValue, this.options.maxMinValue != undefined ? this.options.maxMinValue : minValue);\r\n    var topValue = this.options.maxValue != undefined ? this.options.maxValue : Math.max(maxValue, this.options.minMaxValue != undefined ? this.options.minMaxValue : maxValue);\r\n    var minX = offsetX;\r\n    var maxX = offsetX;\r\n\r\n    var x = offsetX;\r\n    var y = getY.bind(points, bottomValue, topValue, offsetY, height);\r\n    var delta = width / (points.length - 1);\r\n\r\n    var dot = drawDot.bind(this, this.options.dotRadius * this.ratio, offsetX, width + offsetX);\r\n    var line = drawLine.bind(this, offsetX, width + offsetX);\r\n\r\n    this.context.save();\r\n\r\n    this.context.strokeStyle = this.options.lineColor;\r\n    this.context.fillStyle = this.options.lineColor;\r\n    this.context.lineWidth = lineWidth;\r\n    this.context.lineCap = 'round';\r\n    this.context.lineJoin = 'round';\r\n\r\n    if(this.options.fillBelow && points.length > 1){\r\n      this.context.save();\r\n      this.context.beginPath();\r\n      this.context.moveTo(x, y(0));\r\n      for (var i = 1; i < points.length; i++) {\r\n        x += delta;\r\n\r\n        minX = points[i] == minValue ? x : minX;\r\n        maxX = points[i] == maxValue ? x : maxX;\r\n\r\n        this.context.lineTo(x, y(i));\r\n      }\r\n      this.context.lineTo(width+offsetX, height + offsetY + lineWidth/2);\r\n      this.context.lineTo(offsetX, height + offsetY + lineWidth/2);\r\n      this.context.fill();\r\n      if(this.options.fillLighten > 0){\r\n        this.context.fillStyle = 'white';\r\n        this.context.globalAlpha = this.options.fillLighten;\r\n        this.context.fill();\r\n        this.context.globalAlpha = 1;\r\n      }else if(this.options.fillLighten < 0){\r\n        this.context.fillStyle = 'black';\r\n        this.context.globalAlpha = -this.options.fillLighten;\r\n        this.context.fill();\r\n      }\r\n      this.context.restore();\r\n    }\r\n\r\n    x = offsetX;\r\n    this.context.beginPath();\r\n    this.context.moveTo(x, y(0));\r\n    for (var i = 1; i < points.length; i++) {\r\n      x += delta;\r\n      this.context.lineTo(x, y(i));\r\n    }\r\n    this.context.stroke();\r\n\r\n    this.context.restore();\r\n\r\n    line(this.options.bottomLine, 0, offsetY);\r\n    line(this.options.topLine, 0, height + offsetY+lineWidth/2);\r\n\r\n    dot(this.options.startColor, this.options.startLine, offsetX + (points.length == 1 ? width / 2 : 0), y(0));\r\n    dot(this.options.endColor, this.options.endLine, offsetX + (points.length == 1 ? width / 2 : width), y(points.length-1));\r\n    dot(this.options.minColor, this.options.minLine, minX + (points.length == 1 ? width / 2 : 0), y(points.indexOf(minValue)));\r\n    dot(this.options.maxColor, this.options.maxLine, maxX + (points.length == 1 ? width / 2 : 0), y(points.indexOf(maxValue)));\r\n\r\n    //line(this.options.averageLine, )\r\n  }\r\n\r\n  function minmax(a, b, c) {\r\n    return Math.max(a, Math.min(b, c));\r\n  }\r\n\r\n  return Sparkline;\r\n}));\r\n"]},"metadata":{},"sourceType":"module"}